{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","showTitle","evt","prod","console","log","pName","inp","m","AppModule","HomeComponent","titleService","setTitle","NavBarComponent","userService","isLoggedIn","currentUser","getCurrentUser","UserService","username","SharedModule","environment","production","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<app-nav-bar></app-nav-bar>\r\n<!-- <h2 *ngIf=\"showTitle\">{{ title }}</h2>\r\n<hr />\r\n\r\n<input type=\"text\" (change)=\"updateTitle($event.target.value)\" [value]=\"title\" />\r\n<hr/>\r\n<input type=\"text\" [(ngModel)]=\"title\" />\r\n<hr/>\r\n<input #inpTitle type=\"text\" [value]=\"title\" />\r\n<input type=\"button\" value=\"update title\" (click)=\"updateTitleViaAButton(inpTitle.value)\"/>\r\n<hr/>\r\n<form (submit)=\"updateTitleViaFormSubmit(inpTitleForm.value)\">\r\n    <input #inpTitleForm type=\"text\" [value]=\"title\" />\r\n    <input type=\"submit\" value=\"update title via form\" />\r\n</form>\r\n<hr/> -->\r\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { stringify } from 'querystring';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App One';\n  showTitle = true;\n\n  handleClick(evt: any, prod: any) {\n    console.log(prod);\n  }\n  handleMouseOver(pName: string) {\n    console.log(pName);\n  }\n\n  updateTitle(inp: any) {\n    this.title = inp;\n  }\n  updateTitleViaAButton(inp: string) {\n    this.title = inp;\n  }\n  updateTitleViaFormSubmit(inp: string) {\n    this.title = inp;\n  }\n}\n","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\n// import { ProductManagementModule } from './components/product-management/product-management.module';\r\n// import { ProductsComponent } from './components/productManagement/products/products.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent },\r\n      { path: 'home', component: HomeComponent },\r\n      // { path: 'products', component: ProductsComponent }]),\r\n      // { path: 'products', loadChildren:'./components/product-management/product-management.module#ProductManagementModule' }]),\r\n      { path: 'products', loadChildren: () => import('./components/product-management/product-management.module').then(m=> m.ProductManagementModule)}]),\r\n    BrowserModule,\r\n    FormsModule,\r\n    SharedModule\r\n    // ,\r\n    // ProductManagementModule\r\n  ],\r\n  providers: [Title],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private titleService: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle('Home');\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: beige; padding: 50px;\">\n    <a routerLink=\"home\" routerLinkActive=\"linkActive\">Home</a> &nbsp;\n    <a routerLink=\"products\" routerLinkActive=\"linkActive\">Products</a>\n    <a *ngIf=\"!isLoggedIn\" style=\"position: relative; float: right;\" href=\"login\">Login</a>\n    <span *ngIf=\"isLoggedIn\" style=\"position: relative; float: right;\">Welcome {{currentUser.username}}!</span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  currentUser: User;\n  isLoggedIn = false;\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.userService.getCurrentUser();\n    this.isLoggedIn = this.currentUser ? true : false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private currentUser = { id: 1, username: 'userOne' };\n  constructor() { }\n\n  getCurrentUser(): User {\n    return this.currentUser;\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HoverHiglightDirective } from './hover-higlight.directive';\nimport { NoSpaceDirective } from './no-space.directive';\nimport { MixedCasePipe } from './mixed-case.pipe';\n\n\n\n@NgModule({\n  declarations: [HoverHiglightDirective, NoSpaceDirective, MixedCasePipe],\n  providers: [],\n  exports: [HoverHiglightDirective, NoSpaceDirective, MixedCasePipe],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}